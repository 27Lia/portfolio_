[
    {
        "id": 1,
        "name": "HTML, CSS, JS",
        "icons": [
            "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/html5/html5-original.svg",
            "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/css3/css3-original.svg",
            "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"
        ],
        "descriptions": [
            "SEO 최적화, 시멘틱 태그를 활용할수있습니다.",
            "반응형웹을 만들수있습니다.",
            "ES6에서 추가된 async/await를 활용하여 비동기 코드를 보다 가독성 있게 작성할 수 있습니다.",
            "DOM 사용에 어려움이 없습니다."
        ],
        "gradient": "linear-gradient(145deg, #f62f10, #fff703)"
    },
    {
        "id": 2,
        "name": "React",
        "icons": [
            "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg"
        ],
        "descriptions": [
            "재사용 가능한 컴포넌트를 개발하며, Hook사용이 가능합니다.",
            "다양한 라이브러리를 활용한 경험이있습니다."
        ],
        "gradient": "linear-gradient(145deg, #ffffff, #24a1ea)   "
    },
    {
        "id": 3,
        "name": "TypeScript",
        "icons": [
            "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg"
        ],
        "descriptions": [
            "인터페이스를 사용하여 객체의 구조를 정의하고, 코드의 예측 가능성을 높일수있습니다.",
            "Props와 State에 타입을 적용하여 React 컴포넌트의 타입 안정성을 강화할수있습니다.",
            "간단한 타입스크립트 프로젝트에서의 경험을 바탕으로 지속적으로 학습하고 있으며, 타입 시스템의 이점을 활용하여 버그 발생 가능성을 줄이고자 합니다."
        ],
        "gradient": "linear-gradient(145deg, #2685f1, #9bc0e3)"
    },
    {
        "id": 4,
        "name": "Redux",
        "icons": [
            "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/redux/redux-original.svg"
        ],
        "descriptions": [
            "컴포넌트 간에 전역 상태를 공유하고, 데이터 공유와 관리를 용이하게 했습니다.",
            "redux-persist를 통해 Redux 스토어의 상태를 로컬 스토리지에 영구적으로 저장하고, 페이지 새로고침 시에도 사용자의 로그인 상태나 기타 중요한 데이터를 유지할 수 있습니다."
        ],
        "gradient": "linear-gradient(145deg, #cdb3f5, #633f9d)"
    },
    {
        "id": 5,
        "name": "Styled Components",
        "icons": [
            "https://raw.githubusercontent.com/styled-components/brand/master/styled-components.png"
        ],
        "descriptions": [
            "컴포넌트 스타일을 컴포넌트 자체에 포함시킴으로써, 외부 의존성을 줄이고 모듈화된 스타일링을 적용할 수 있습니다.",
            "컴포넌트 단위로 스타일을 정의하고 관리하여 코드의 가독성과 유지보수성을 높일 수 있습니다."
        ],
        "gradient": "linear-gradient(145deg, #eb83a6, #f1b6a2)"
    },
    {
        "id": 6,
        "name": "AWS, FIREBASE",
        "icons": [
            "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/amazonwebservices/amazonwebservices-original-wordmark.svg",
            "https://www.vectorlogo.zone/logos/firebase/firebase-icon.svg"
        ],
        "descriptions": [
            "S3 버킷을 활용한 프론트엔드 배포 경험이 있습니다.",
            "Firebase Authentication을 활용한 사용자 로그인 및 인증 구현을 할 수 있습니다.",
            "Vercel을 통한 환경 변수 설정과 배포 경험이 있습니다. "
        ],
        "gradient": "linear-gradient(145deg, #f35f51, #eca324, #ef8a24)"
    },
    {
        "id": 7,
        "name": "Three.js",
        "icons": [
            "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/threejs/threejs-original.svg"
        ],
        "descriptions": [
            "기본적인 Three.js 사용법을 이해하고, 간단한 3D 씬을 구현할 수 있습니다.",
            "Three.js를 사용하여 웹사이트에 인터랙티브한 3D 요소를 추가하는 기본적인 방법을 알고 있습니다."
        ],
        "gradient": "linear-gradient(145deg, #8f94fb, #4e54c8)"
    },
    {
        "id": 8,
        "name": "FIGMA",
        "icons": [
            "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/figma/figma-original.svg"
        ],
        "descriptions": [],
        "gradient": "linear-gradient(145deg, #c7aaf6, #ddd7ff)"
    }
]